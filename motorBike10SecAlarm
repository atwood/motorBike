/*
  MotorBike10SecAlarm
  This code emulates a EV Power bms-mcu-08b (after I toasted my ev power picAxe).
  Copyright 2013 John & Wes Atwood
  License: CC-BY-SA
  */

int chargerRelay = 1 ;
int redLed = 2;
int greenLed = 3;
int batteryMonitor = 4;

int oneSec = 1000; //millisecs
int tenSecs =  /*10 */ 5 * oneSec; //5 because the blink takes 2 secs
int alarmState = 0;
int count = 0;

void setup() {
  pinMode(greenLed, OUTPUT); 
  pinMode(redLed, OUTPUT);  
  pinMode(chargerRelay, OUTPUT);

  pinMode(batteryMonitor, INPUT);
  
  digitalWrite(greenLed, HIGH);   // turn the LED on (HIGH is the voltage level)  
  digitalWrite(redLed,LOW);
  digitalWrite(chargerRelay, HIGH);
  
  // not on DigiSpark - Serial uses pin 1
  //Serial.begin(9600);
}

void loop() {
  int buttonState;
  while (! alarmState) {
      // read the input pin:
      buttonState = digitalRead(batteryMonitor);
      //Serial.println(buttonState);
      delay(1); // delay in between reads for stability  
    
      if (0 == buttonState) {
        blink(redLed, oneSec); 
        count = count + oneSec; //milisecs
        } else {
          count = 0;
          }
      if (count > tenSecs) {
         alarmState = 1;
         digitalWrite(redLed, HIGH);
         digitalWrite(chargerRelay, LOW);
      }
  } 
}

void blink(int pin, int duration) {
  digitalWrite(pin, HIGH);   // turn the LED on (HIGH is the voltage level)
  delay(duration);               // wait for a second
  digitalWrite(pin, LOW);    // turn the LED off by making the voltage LOW
  delay(duration);               // wait for a second
  //return(void);
}
